(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{217:function(t,e,n){"use strict";n.r(e);var r=n(0),s=Object(r.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("p"),t._m(1),n("p"),t._v(" "),n("p",[n("a",{attrs:{href:"http://blog.fens.me/nodejs-mysql-intro/",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文档"),n("OutboundLink")],1)]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),n("p",[t._v("然后在路由routes/user.js里面引进来使用，如下。")]),t._v(" "),t._m(16),t._m(17)])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"node-js数据库操作"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-js数据库操作"}},[this._v("#")]),this._v(" Node.js数据库操作")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#安装"}},[this._v("安装")])]),e("li",[e("a",{attrs:{href:"#基础使用"}},[this._v("基础使用")]),e("ul",[e("li",[e("a",{attrs:{href:"#连接数据库，在app-js使用"}},[this._v("连接数据库，在app.js使用")])]),e("li",[e("a",{attrs:{href:"#增删改查"}},[this._v("增删改查")])]),e("li",[e("a",{attrs:{href:"#使用连接池配置"}},[this._v("使用连接池配置")])])])]),e("li",[e("a",{attrs:{href:"#在express项目中使用"}},[this._v("在express项目中使用")])]),e("li",[e("a",{attrs:{href:"#测试"}},[this._v("测试")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"安装"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[this._v("#")]),this._v(" 安装")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("npm install mysql\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"基础使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基础使用"}},[this._v("#")]),this._v(" 基础使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"连接数据库，在app-js使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#连接数据库，在app-js使用"}},[this._v("#")]),this._v(" 连接数据库，在app.js使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("var mysql = require('mysql');\nvar conn = mysql.createConnection({\n    host: 'localhost',\n    user: 'root',\n    password: 'root',\n    database:'nodejs',\n    port: 3306\n});\nconn.connect();\nconn.query('SELECT * from table', function(err, rows, fields) {\n    if (err) throw err;\n    console.log('The solution is: ', rows[0].solution);\n});\nconn.end();\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"增删改查"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#增删改查"}},[this._v("#")]),this._v(" 增删改查")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("var mysql = require('mysql');\nvar conn = mysql.createConnection({\n    host: 'localhost',\n    user: 'nodejs',\n    password: 'nodejs',\n    database: 'nodejs',\n    port: 3306\n});\nconn.connect();\n\nvar insertSQL = 'insert into t_user(name) values(\"conan\"),(\"fens.me\")';\nvar selectSQL = 'select * from t_user limit 10';\nvar deleteSQL = 'delete from t_user';\nvar updateSQL = 'update t_user set name=\"conan update\"  where name=\"conan\"';\n\n//delete\nconn.query(deleteSQL, function (err0, res0) {\n    if (err0) console.log(err0);\n    console.log(\"DELETE Return ==> \");\n    console.log(res0);\n\n    //insert\n    conn.query(insertSQL, function (err1, res1) {\n        if (err1) console.log(err1);\n        console.log(\"INSERT Return ==> \");\n        console.log(res1);\n\n        //query\n        conn.query(selectSQL, function (err2, rows) {\n            if (err2) console.log(err2);\n\n            console.log(\"SELECT ==> \");\n            for (var i in rows) {\n                console.log(rows[i]);\n            }\n\n            //update\n            conn.query(updateSQL, function (err3, res3) {\n                if (err3) console.log(err3);\n                console.log(\"UPDATE Return ==> \");\n                console.log(res3);\n\n                //query\n                conn.query(selectSQL, function (err4, rows2) {\n                    if (err4) console.log(err4);\n\n                    console.log(\"SELECT ==> \");\n                    for (var i in rows2) {\n                        console.log(rows2[i]);\n                    }\n                });\n            });\n        });\n    });\n});\n\n//conn.end();\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"使用连接池配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用连接池配置"}},[this._v("#")]),this._v(" 使用连接池配置")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("var mysql = require('mysql');\nvar pool = mysql.createPool({\n    host: 'localhost',\n    user: 'nodejs',\n    password: 'nodejs',\n    database: 'nodejs',\n    port: 3306\n});\n\nvar selectSQL = 'select * from t_user limit 10';\n\npool.getConnection(function (err, conn) {\n    if (err) console.log(\"POOL ==> \" + err);\n\n    conn.query(selectSQL,function(err,rows){\n        if (err) console.log(err);\n        console.log(\"SELECT ==> \");\n        for (var i in rows) {\n            console.log(rows[i]);\n        }\n        conn.release();\n    });\n});\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"在express项目中使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#在express项目中使用"}},[this._v("#")]),this._v(" 在express项目中使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("这是express目录结构")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"http://www.fengdb.com/public/images/express04.png",alt:"这是目录结构"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("model中是用来存储业务逻辑代码")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("var mysql = require('mysql');\nvar mysqlConfig = require('../conf/mysql');\n// 使用DBConfig.js的配置信息创建一个MySQL连接池\nvar pool = mysql.createPool( mysqlConfig );\n\nvar userSql = {\n\tinsert:'INSERT INTO node_user(name,age) VALUES(?,?)',\n\tqueryAll:'SELECT * FROM node_user',\n\tgetUserById:'SELECT * FROM node_user WHERE id = ? '\n};\n\nvar main = {\n\tadd: function (request,callback) {\n\t\t// 从连接池获取连接\n\t\tpool.getConnection(function(err, connection) {\n\t\t\tvar d = {};\n\t\t\tif ( err ) {\n\t\t\t\td.connectError = err;\n\t\t\t\treturn callback(d);\n\t\t\t}\n\n\t\t\t// 获取前台页面传过来的参数\n\t\t\tvar param = request.query || request.params;\n\n\t\t\t// 建立连接 增加一个用户信息\n\t\t\tconnection.query(userSql.insert, [param.name,param.age], function(err, result) {\n\t\t\t\td.response = { err: err, success: result };\n\t\t\t\tcallback(d);\n\t\t\t\t// 释放连接\n\t\t\t\tconnection.release();\n\n\t\t\t});\n\t\t});\n\t},\n\tlist: function (request,callback) {\n\t\t// 从连接池获取连接\n\t\tpool.getConnection(function(err, connection) {\n\t\t\tvar d = {};\n\t\t\tif ( err ) {\n\t\t\t\td.connectError = err;\n\t\t\t\treturn callback(d);\n\t\t\t}\n\t\t\t// 建立连接 增加一个用户信息\n\t\t\tconnection.query(userSql.queryAll,  function(err, result) {\n\n\t\t\t\td.response = { err: err, success: result };\n\t\t\t\tcallback(d);\n\t\t\t\t// 释放连接\n\t\t\t\tconnection.release();\n\n\t\t\t});\n\t\t});\n\t}\n};\nmodule.exports = main;\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("var express = require('express');\nvar router = express.Router();\nvar userModel = require('../model/userModel');\n\n// 添加用户\nrouter.post('/addUser', function(req, res, next){\n\tuserModel.add(req,function (data) {\n\n\t\tif (data.connectError) {\n\t\t\treturn res.json('connect database error')\n\t\t}\n\n\t\tif (data.response) {\n\t\t\tres.json(data.query.success);\n\t\t}\n\n\n\t});\n});\n\nrouter.get('/list', function(req, res, next){\n\tuserModel.list(req,function (data) {\n\t\tif (data.connectError) {\n\t\t\treturn res.json({code:'101',desc: 'db connect error!'})\n\t\t}\n\n\t\tif (data.response) {\n\t\t\treturn res.json({code:'200',desc: 'success',data:data.response.success})\n\t\t}\n\n\t});\n});\n\nmodule.exports = router;\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"测试"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[this._v("#")]),this._v(" 测试")])}],!1,null,null,null);e.default=s.exports}}]);