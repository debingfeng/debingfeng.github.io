(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{246:function(t,e,r){"use strict";r.r(e);var s=r(0),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),r("p",[t._v("几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离开来，以免影响开发主线。 在很多版本控制系统中，这是一个略微低效的过程——常常需要完全创建一个源代码目录的副本。对于大项目来说，这样的过程会耗费很多时间。")]),t._v(" "),t._m(2),t._v(" "),t._m(3),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),r("p",[t._v("使用这个命令合并分支的时候，git会将当前分支的修改暂存在临时文件中，然后将指针指向被合并的分支最新提交处，然后再将临时文件作为新的修改提交上去。这样当前修改内容就会是最新的提交。")]),t._v(" "),r("p",[t._v("我们来尝试一下")]),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.progit.cn/#_git_branches_overview",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git pro 中分支管理"),r("OutboundLink")],1)])]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2012/07/git.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git中分支管理策略"),r("OutboundLink")],1)])])])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"git分支管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git分支管理"}},[this._v("#")]),this._v(" Git分支管理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"分支管理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支管理"}},[this._v("#")]),this._v(" 分支管理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"创建与切换分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建与切换分支"}},[this._v("#")]),this._v(" 创建与切换分支")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("// 创建分支\ngit branch [branchName]\n\n// 例如创建dev分支\n\ngit branch dev\n\n\n// 切换分支\ngit checkout [branchName]\n\n// 创建并切换至分支\n\ngit checkout  -b  test\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"分支合并"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支合并"}},[this._v("#")]),this._v(" 分支合并")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"合并git-merge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#合并git-merge"}},[this._v("#")]),this._v(" 合并git merge")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("使用git merge的时候，git会将找到两个分支最近的祖先提交，以此为基础将两个分支的修改合并作为一次新的提交。如果冲突了，需要等待处理冲突才可以继续操作。"),e("br"),this._v("在合并的时候， 如果当前分支的HEAD是需要被合并的分支的直接下游，那么git会将指针直接向前移动，因为这种情况下的合并操作没有需要解决的分歧，这种被称作快进。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"变基git-rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#变基git-rebase"}},[this._v("#")]),this._v(" 变基git rebase")])},function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ul",[r("li",[t._v("默认创建matser分支，")]),t._v(" "),r("li",[t._v("基于master创建一个分支a，b")]),t._v(" "),r("li",[t._v("master上提交一个master")]),t._v(" "),r("li",[t._v("分支a上提交 a1,a2,")]),t._v(" "),r("li",[t._v("master提交一个master2")]),t._v(" "),r("li",[t._v("分支b上提交b1")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("现在本地仓库的版本提交应该如下所示"),e("br"),e("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/424641/1584517606316-7cdca027-ef41-4e6b-9ef5-f43d4667f3f4.png#align=left&display=inline&height=286&name=rebase1.png&originHeight=409&originWidth=694&size=23906&status=done&style=none&width=486",alt:"rebase1.png"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("现在已经测试通过我们将b合并进主干。我们先在分支B上将master2 rebase一下进b."),e("br"),this._v("这个时候分支b上应该是master -> master2->b1,"),e("br"),this._v("然后再切换至master,将b合并进master,"),e("br"),this._v("这是master上就应该 master->master2->b1了")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"删除分支"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除分支"}},[this._v("#")]),this._v(" 删除分支")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-git extra-class"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[this._v("// 删除本地分支\ngit branch -d [branchName]\n\n// 删除远程分支\ngit push origin --delete serverfix\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"分支管理策略"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#分支管理策略"}},[this._v("#")]),this._v(" 分支管理策略")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Git中的分支创建分支灵活，也是其最大的特点与优势。业界已经有了非常成熟的分支管理模型。"),e("br"),this._v("如下图源自Gitee上分支模型，相信已经可以满足绝大部分的需求了。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:"https://cdn.nlark.com/yuque/0/2020/png/424641/1584522072286-ed3f17e2-cd90-45f0-af73-660728821ff9.png#align=left&display=inline&height=274&name=branchManage.png&originHeight=274&originWidth=723&size=19384&status=done&style=none&width=723",alt:"branchManage.png"}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"参考资料"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[this._v("#")]),this._v(" 参考资料")])}],!1,null,null,null);e.default=a.exports}}]);