(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{216:function(t,e,a){"use strict";a.r(e);var s=a(0),r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[t._m(0),t._v(" "),a("p"),t._m(1),a("p"),t._v(" "),t._m(2),t._v(" "),a("p",[t._v("JWT是我们用来实现基于token认证的一种实现方式，是目前实现web开发中跨域认证的一种常用方式。当然，你也可以基于这种方式实现自己签发和认证处理方式，这里首先介绍一下使用方式。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://www.npmjs.com/package/jsonwebtoken",target:"_blank",rel:"noopener noreferrer"}},[t._v("jsonwebtoken官方网站"),a("OutboundLink")],1)]),t._v(" "),t._m(3),t._v(" "),t._m(4),t._m(5),t._v(" "),t._m(6),t._m(7),t._v(" "),t._m(8),t._m(9),t._v(" "),a("p",[t._v('客户端登录时请求服务器，签发一个token， json web token官方规定由三部分组成\nHeader(头部).Payload（负载）.Signature（签名），并且以 " . "分隔，')]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),a("p",[t._v("这些是一组预定义声明，不是强制性的，但建议使用，以提供一组有用的，可互操作的声明。其中一些是：iss（签发人），exp（到期时间），sub（主题），aud（观众）等。")]),t._v(" "),t._m(14),t._m(15),t._v(" "),t._m(16),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),t._m(20),t._v(" "),a("p",[t._v("前面提到，Header 和 Payload 串型化的算法是 Base64URL。这个算法跟 Base64 算法基本类似，但有一些小的不同。")]),t._v(" "),a("p",[t._v("JWT 作为一个令牌（token），有些场合可能会放到 URL（比如 api.example.com/?token=xxx）。Base64 有三个字符+、/和=，在 URL 里面有特殊含义，所以要被替换掉：=被省略、+替换成-，/替换成_ 。这就是 Base64URL 算法。")]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),a("p",[t._v("在HTTP中，HTTP基本认证是一种允许Web浏览器或者其他客户端在请求时提供用户名和密码形式的身份凭证的一种登录验证方式。")]),t._v(" "),t._m(23),t._v(" "),a("p",[t._v("用户登录以后服务器会用session来保存用户的登录状态信息，用户下次请求时通过session来认证。")]),t._v(" "),t._m(24),t._v(" "),a("p",[t._v("OAuth 是一个开放标准，允许用户让第三方应用访问该用户在某一网站上存储的私密的资源（如照片，视频，联系人列表等），而无需将用户名和密码提供给第三方应用。")]),t._v(" "),t._m(25),t._v(" "),a("p",[t._v("客户端登录时，服务器会签发一个token给客户端，这个toekn有过期时间和使用范围，客户端保存在本地，客户端每次请求需要认证的接口，都要带上token，服务器判断是否有权限访问。")]),t._v(" "),a("p",[t._v("这种方式最大的缺点就是，在token未过期时，其他人拿到token也能使用，所以使用这种方式最好考虑清楚应对方式，")]),t._v(" "),t._m(26),t._v(" "),a("p",[t._v("W3C的WebAuthn API是一种可融入浏览器和相关Web平台基础架构的标准WebAPI，可为每个站点提供强大、唯一且基于公钥的凭证，消除了从某一站点窃取密码后被用于其他站点的风险。 使用FIDO身份验证器加载到设备上的在浏览器中运行的Web应用程序，可以通过密码操作代替密码交换，或除了密码交换之外，还可为服务提供者和用户带来诸多益处：")]),t._v(" "),t._m(27),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.fidoalliance.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("查看FIDO项目组官方网站"),a("OutboundLink")],1)]),t._v(" "),t._m(28),t._v(" "),a("p",[a("a",{attrs:{href:"https://jwt.io/introduction/",target:"_blank",rel:"noopener noreferrer"}},[t._v("jwt官方网站"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://chenhuichao.com/2017/03/13/fe/web-auth/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web开发中常见的认证机制 - 陈杰"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"http://www.ruanyifeng.com/blog/2018/07/json_web_token-tutorial.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON Web Token 入门教程 - 阮一峰"),a("OutboundLink")],1)])])}),[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"node-js下jwt实现请求验证"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#node-js下jwt实现请求验证"}},[this._v("#")]),this._v(" Node.js下jwt实现请求验证")])},function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#_1、jwt基本使用"}},[t._v("1、JWT基本使用")])]),a("li",[a("a",{attrs:{href:"#_2、jwt实现原理"}},[t._v("2、JWT实现原理")]),a("ul",[a("li",[a("a",{attrs:{href:"#_2-1）header-中由两部分组成一个是加密方法，另一个是令牌类型"}},[t._v("2.1）Header 中由两部分组成一个是加密方法，另一个是令牌类型")])]),a("li",[a("a",{attrs:{href:"#_2-2）payload-这个指的是有效负载，简单的说就存放的实体数据，官方给了一些建议声明。"}},[t._v("2.2）Payload 这个指的是有效负载，简单的说就存放的实体数据，官方给了一些建议声明。")])]),a("li",[a("a",{attrs:{href:"#_2-3）signature-签名-要创建签名部分，必须采用标头中指定的算法对header-payload，秘钥secret-对其进行签名，如下"}},[t._v("2.3）Signature(签名)要创建签名部分，必须采用标头中指定的算法对Header,Payload，秘钥secret,对其进行签名，如下")])]),a("li",[a("a",{attrs:{href:"#_2-4）base64url"}},[t._v("2.4）Base64URL")])])])]),a("li",[a("a",{attrs:{href:"#_3、顺带聊一下web开发中的一些认证机制"}},[t._v("3、顺带聊一下web开发中的一些认证机制")]),a("ul",[a("li",[a("a",{attrs:{href:"#_3-1）http基本认证（http-basic-auth）"}},[t._v("3.1）HTTP基本认证（HTTP Basic Auth）")])]),a("li",[a("a",{attrs:{href:"#_3-2）cookie与session认证机制"}},[t._v("3.2）Cookie与session认证机制")])]),a("li",[a("a",{attrs:{href:"#_3-3）oauth（开放授权）"}},[t._v("3.3）OAuth（开放授权）")])]),a("li",[a("a",{attrs:{href:"#_3-4）基于token认证机制"}},[t._v("3.4）基于Token认证机制")])]),a("li",[a("a",{attrs:{href:"#_3-5）webauthn认证-一-浏览器上一种新的认证方式"}},[t._v("3.5）WebAuthn认证 一 浏览器上一种新的认证方式")])])])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_1、jwt基本使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、jwt基本使用"}},[this._v("#")]),this._v(" 1、JWT基本使用")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("安装jsonwebtoken")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v(" npm install jsonwebtoken \n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("在登录的时候签发token，前端在拿到token后存储在本地（cookie、web storage都可以）")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("const jwt = require('jsonwebtoken');\nconst secret = '秘钥abcABC!@#'; \n\n   //jwt生成token\n const token = jwt.sign({\n     name: web\n  }, secret, {\n     expiresIn:  60*60*2 //2个小时到期时间\n  });\nconsole.log(token);\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("服务器在客户端请求需要认证的接口时进行解密认证")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("//解密token\njwt.verify(token, secret, function (err, decoded) {\n    if (!err){\n          console.log(decoded.name);  //如果超时则验证出错\n     }\n})\n\n\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_2、jwt实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、jwt实现原理"}},[this._v("#")]),this._v(" 2、JWT实现原理")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-1）header-中由两部分组成一个是加密方法，另一个是令牌类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-1）header-中由两部分组成一个是加密方法，另一个是令牌类型"}},[this._v("#")]),this._v(" 2.1）Header 中由两部分组成一个是加密方法，另一个是令牌类型")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("例如")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('{\n  "alg": "HS256",\n  "typ": "JWT"\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-2）payload-这个指的是有效负载，简单的说就存放的实体数据，官方给了一些建议声明。"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-2）payload-这个指的是有效负载，简单的说就存放的实体数据，官方给了一些建议声明。"}},[this._v("#")]),this._v(" 2.2）Payload 这个指的是有效负载，简单的说就存放的实体数据，官方给了一些建议声明。")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('{\n    iss: "",\n    exp: "",\n    sub: "",\n    aud: ""\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("也可以自己定义一些字段")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('{\n    iss: "",\n    exp: "",\n    sub: "",\n    aud: "" ,\n    jid: ""//序号\n    effect: "",//生效时间\n}\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("blockquote",[e("p",[this._v("然后使用Base64Url对Payload进行编码，形成令牌token的第二部分")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-3）signature-签名-要创建签名部分，必须采用标头中指定的算法对header-payload，秘钥secret-对其进行签名，如下"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-3）signature-签名-要创建签名部分，必须采用标头中指定的算法对header-payload，秘钥secret-对其进行签名，如下"}},[this._v("#")]),this._v(" 2.3）Signature(签名)要创建签名部分，必须采用标头中指定的算法对Header,Payload，秘钥secret,对其进行签名，如下")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('HMACSHA256(\n  base64UrlEncode(header) + "." +\n  base64UrlEncode(payload),\n  secret)\n')])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_2-4）base64url"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-4）base64url"}},[this._v("#")]),this._v(" 2.4）Base64URL")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"_3、顺带聊一下web开发中的一些认证机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、顺带聊一下web开发中的一些认证机制"}},[this._v("#")]),this._v(" 3、顺带聊一下web开发中的一些认证机制")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-1）http基本认证（http-basic-auth）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1）http基本认证（http-basic-auth）"}},[this._v("#")]),this._v(" 3.1）HTTP基本认证（HTTP Basic Auth）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-2）cookie与session认证机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2）cookie与session认证机制"}},[this._v("#")]),this._v(" 3.2）Cookie与session认证机制")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-3）oauth（开放授权）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3）oauth（开放授权）"}},[this._v("#")]),this._v(" 3.3）OAuth（开放授权）")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-4）基于token认证机制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-4）基于token认证机制"}},[this._v("#")]),this._v(" 3.4）基于Token认证机制")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_3-5）webauthn认证-一-浏览器上一种新的认证方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-5）webauthn认证-一-浏览器上一种新的认证方式"}},[this._v("#")]),this._v(" 3.5）WebAuthn认证 一 浏览器上一种新的认证方式")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("p",[this._v("更简单的身份验证：用户只需使用一种手势登录PC、笔记本电脑和/或移动设备中的内部或内置认证器（如指纹或面部生物识别技术）使用CTAP进行设备到设备认证的外部认证器（如安全密钥和移动设备），一个由FIDO联盟开发的用于补充WebAuthn的外部认证器协议")])]),this._v(" "),e("li",[e("p",[this._v("更强的身份验证：FIDO身份验证比单纯依赖密码和相关身份验证方式要强大得多，并具有以下优点用户证书和生物识别模板永远不会离开用户的设备，也不会存储在服务器上帐户可以免受网络钓鱼，中间人攻击和使用被盗密码的反复攻击")])]),this._v(" "),e("li",[e("p",[this._v("开发人员可以开始在FIDO新的开发者资源页面上创建利用FIDO身份验证的应用程序和服务。")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("参考文档")])])}],!1,null,null,null);e.default=r.exports}}]);